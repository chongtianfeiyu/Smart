<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <description>收报配置</description>

    <!-- Message converter -->
    <bean id="simpleMessageConverter" class="org.springframework.jms.support.converter.SimpleMessageConverter" />

    <!-- 基类MQ消息监听器 -->
    <bean id="parentListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer" abstract="true">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <!-- Consumer 个数配置 -->
        <property name="concurrentConsumers" value="${jms.listener.container.concurrentConsumers}" />
        <property name="maxConcurrentConsumers" value="${jms.listener.container.maxConcurrentConsumers}" />
        <!-- 设置消息确认模式为Client -->
        <!-- AUTO_ACKNOWLEDGE。使用方处理消息后，系统会自动确认该消息。此模式可确保在提供者发生故障后至少重新传送一次消息。 -->
        <!-- CLIENT_ACKNOWLEDGE。应用程序控制确认消息的时间点。该会话中自上次确认以来处理的所有消息都将被确认。如果消息服务器在处理一组确认时发生故障，则该组中的一个或多个消息将被重新传送。 -->
        <property name="sessionAcknowledgeModeName" value="CLIENT_ACKNOWLEDGE" />
        <property name="cacheLevel" value="4"/>
    </bean>

    <bean id="parentMessageListener" class="com.somnus.smart.support.jms.AbstractJmsReceiveTemplate" scope="prototype"
          abstract="true">
        <!-- onMessage委托给execute -->
        <property name="defaultListenerMethod" value="onReceive" />
        <property name="messageConverter" ref="simpleMessageConverter" />
    </bean>

</beans>